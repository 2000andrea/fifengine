# Build worker image (VM template)
image: Visual Studio 2015

# scripts that are called at very beginning, before repo cloning
init:
  - date /T & time /T
  - git config --global core.autocrlf input
  - cmake --version 
  # go to hell Xamarin (see http://help.appveyor.com/discussions/problems/4569)
  - del "C:\Program Files (x86)\MSBuild\14.0\Microsoft.Common.targets\ImportAfter\Xamarin.Common.targets"

branches:
  only:
  - master

clone_depth: 5

version: '{build}'

platform:
  - x86

configuration:
  - Release
  - Debug

environment:
  matrix:
    - generator: "Visual Studio 14"        
    #- generator: "MinGW Makefiles"

matrix:
  fast_finish: true

cache:
  - C:\projects\fifengine-dependencies\downloads
#  - C:\projects\fifengine-dependencies\includes

install:
  # set path to boost according to compiler toolchain
  - if "%generator%" == "Visual Studio 14" (SET boost_root=C:\Libraries\boost_1_59_0)
  - if "%generator%" == "Visual Studio 14" (SET boost_librarydir=C:\Libraries\boost_1_59_0\lib32-msvc-14.0)
  # get dependencies
  - cmake dependencies -G "%generator%" -B../fifengine-dependencies/build
  - cmake --build ../fifengine-dependencies/build --target ALL_BUILD --config %configuration% 
  # show dependency folders
  - dir ..\fifengine-dependencies
  - dir ..\fifengine-dependencies\downloads
  - dir ..\fifengine-dependencies\includes /s
  
#before_build:
  # git sh.exe conflicts with MinGW makefiles
  #- if "%generator%"=="MinGW Makefiles" (set "PATH=%PATH:C:\Program Files\Git\usr\bin;=%")

build_script:
  - dir
  # create folder for an out-of-source-tree build: "c:\projects\build"
  - cd.. 
  - mkdir build
  - cd build
  # generate build script
  - >
    cmake ..\fifengine 
    -G "%generator%" 
    -DCMAKE_BUILD_TYPE=%configuration% 
    -DCMAKE_INSTALL_PREFIX="c:/fife/install" 
    -DBOOST_ROOT="%boost_root%" 
    -DBOOST_LIBRARYDIR="%boost_librarydir%" 

#after_build:
#  -