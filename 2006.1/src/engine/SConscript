import glob
import os

Import('env')

if env['lite'] == 0:
	subproject_files = [
	        'engine.cpp', 'exception.cpp', 'gamestate.cpp', 'gamestatemanager.cpp', 'imagecache.cpp',
	        'inputlistener.cpp', 'inputmanager.cpp', 'log.cpp', 'map.cpp', 'mapelevation.cpp', 
	        'mapfactory.cpp', 'maploader.cpp', 'maptile.cpp', 'mapview.cpp', 'mapviewgamestate.cpp',
		'object.cpp', 'rawdata.cpp', 'rawdatafile.cpp', 'rawdatamemsource.cpp', 'rawdatasource.cpp',
	        'scriptbase.cpp', 'settingsmanager.cpp', 'vfs.cpp', 'vfshostsystem.cpp', 'vfssource.cpp',
	        'vfssourcefactory.cpp', 'vfssourceprovider.cpp',
		'defaultobjectgeometry.cpp','defaulttilegeometry.cpp'
	       ]

if env['lite'] == 1:
	subproject_files = [
		'vfs.cpp', 'vfshostsystem.cpp', 'vfssource.cpp', 'vfssourcefactory.cpp', 'vfssourceprovider.cpp'
		]
       
       	
if env['swig'] == 1:
	path = 'swig'
	if env['makeswig'] == 1 and os.path.isdir('swig/'):
		for entry in glob.glob(path + '/*.i'):
			os.system('swig -lua -c++ -includeall -ignoremissing '+entry) #does this work?
	subproject_files.append(glob.glob(path + '/*.cxx'))

if env['lite'] == 0:
	env.Append(CPPPATH = ['#src/engine', '#src/guichan_addon','#src/engine/video'])
	env.Append(LIBPATH = ['#src/guichan_addon'])
	
	files = glob.glob('*.cpp') + subproject_files
	files += SConscript('audio/SConscript') + SConscript('guichan_addon/SConscript') + SConscript('luascript/SConscript') 
	files += SConscript('maploaders/SConscript') + SConscript('tinyxml/SConscript') + SConscript('video/SConscript')
	
	env.StaticLibrary('fife', files)
	
if env['lite'] == 1:
	env.Append(CPPPATH = ['#src/engine', '#src/engine/video'])
	
	files = subproject_files
	files += SConscript('maploaders/SConscript') + SConscript('video/SConscript')
	
	env.StaticLibrary('fifelite', files)

# vim: set filetype=python :
