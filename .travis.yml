language: cpp
sudo: false
matrix:
  include:
    - os: linux
      sudo: required
      dist: trusty
      compiler: clang
      python: "3.6"

git:
  depth: 5

addons:
  apt:
    sources:
    # add PPAs with more up-to-date toolchains
    - ubuntu-toolchain-r-test
    - llvm-toolchain-trusty-5.0
    packages:
    - clang-5.0
    - llvm-5.0-dev
    - libclang-5.0-dev
    - mesa-common-dev
    - libsdl2-dev
    - libsdl2-image-dev
    - libsdl2-ttf-dev
    - libfreetype6-dev
    - libopenal-dev
    - libasound2-dev
    - zlib1g-dev
    - libboost-dev
    - libboost-system-dev
    - libboost-filesystem-dev
    - libboost-test-dev
    - libtinyxml-dev
    - libc6
    - libglew-dev

before_install:
  - "export DISPLAY=:99.0"
  - "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x16"
  - sleep 3 # give xvfb some time to start

    # change clang to version 3.9
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-5.0 20; sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-5.0 20; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo rm -f /usr/local/clang-3.9.0/bin/clang; sudo rm -f /usr/local/clang-3.9.0/bin/clang++; sudo update-alternatives --config clang; sudo update-alternatives --config clang++; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo apt-get -qq update && sudo apt-get install -y libgle3-dev libvorbis-dev libalut-dev cppcheck; fi
    # update swig to version 3.x
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo sh -c 'echo "deb http://archive.ubuntu.com/ubuntu trusty-backports main restricted universe multiverse" >> /etc/apt/sources.list'; sudo apt-get update -qq; sudo apt-get install -yqq swig3.0/trusty-backports; fi
    # install newer version of pylint, the one fetched with apt-get is broken
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo pip install pylint; fi
  - cmake --version

install:
  - git clone --quiet --depth 1 git://github.com/fifengine/fifechan.git
  - if [ $TRAVIS_OS_NAME == linux ]; then mkdir build_fifechan; cd build_fifechan; cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr ../fifechan; fi
  - make -j3
  - sudo make install
  - cd ..

script:
  - cd ..
  - if [ $TRAVIS_OS_NAME == linux ]; then mkdir build; cd build; cmake -DPYTHON_EXECUTABLE=/usr/bin/python3 -DCMAKE_INSTALL_PREFIX:PATH=/usr ../fifengine; fi
  - ls -alh .
  - make -j3
  - sudo make install
  - cd $TRAVIS_BUILD_DIR
  - python3 ./run_tests.py 29

notifications:
  irc: irc.freenode.org#fife
  email: false
